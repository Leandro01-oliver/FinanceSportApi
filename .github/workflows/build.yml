name: CI/CD com Qualidade

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-test-analyze:
    runs-on: windows-latest
    name: Build, Test & Quality Gate
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Instalar SonarCloud Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool install --tool-path .\.sonar\scanner dotnet-sonarscanner

      - name: Build e Análise SonarCloud
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" /o:"${{ secrets.SONAR_ORGANIZATION }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.qualitygate.wait=true /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
          dotnet build --no-restore
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Verificar resultado do Quality Gate
        id: quality
        shell: bash
        run: |
          if [ "${{ steps.build-test-analyze.outcome }}" != "success" ]; then
            echo "fail=true" >> $GITHUB_OUTPUT
          else
            echo "fail=false" >> $GITHUB_OUTPUT
          fi

      - name: Enviar e-mail se falhar
        if: steps.quality.outputs.fail == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.seuservidor.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "❌ Merge recusado: cobertura de testes insuficiente"
          to: devs@suaprojetotime.com
          from: CI Bot <ci@suaprojetotime.com>
          body: |
            Olá, o merge foi recusado porque o código não atingiu a cobertura mínima de 80%.
            Acesse o relatório do SonarCloud para ver os pontos a melhorar:
            https://sonarcloud.io/project/overview?id=${{ secrets.SONAR_PROJECT_KEY }}

      - name: Merge automático para develop
        if: steps.quality.outputs.fail == 'false'
        uses: devops-infra/action-pull-request@v0.5.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ github.ref_name }}
          target_branch: develop
          title: "Merge automático: ${{ github.ref_name }} → develop"
          body: "Merge aprovado automaticamente após passar no quality gate."
