// <auto-generated />
using FinanceSportApi.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace FinanceSportApi.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FinanceSportApi.Domain.Entityes.Investimento", b =>
                {
                    b.Property<string>("InvestimentoId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OutrosTipoAcaoInvestimento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OutrosTipoProdutoInvestimento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("TaxaJuros")
                        .HasColumnType("double");

                    b.Property<int>("TipoAcaoInvestimento")
                        .HasColumnType("int");

                    b.Property<int>("TipoProdutoInvestimento")
                        .HasColumnType("int");

                    b.HasKey("InvestimentoId");

                    b.ToTable("Investimentos");
                });

            modelBuilder.Entity("FinanceSportApi.Domain.Entityes.Produto", b =>
                {
                    b.Property<string>("ProdutoId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProdutoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("FinanceSportApi.Domain.Entityes.Transacao", b =>
                {
                    b.Property<string>("TransacaoId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InvestimentoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OutrosTipoInstituicaoFinanceira")
                        .HasColumnType("longtext");

                    b.Property<string>("OutrosTipoTransacao")
                        .HasColumnType("longtext");

                    b.Property<string>("ProdutoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoInstituicaoFinanceira")
                        .HasColumnType("int");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("int");

                    b.HasKey("TransacaoId");

                    b.HasIndex("InvestimentoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Transacaos");
                });

            modelBuilder.Entity("FinanceSportApi.Domain.Entityes.Transacao", b =>
                {
                    b.HasOne("FinanceSportApi.Domain.Entityes.Investimento", "Investimento")
                        .WithMany("Transacoes")
                        .HasForeignKey("InvestimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceSportApi.Domain.Entityes.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investimento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("FinanceSportApi.Domain.Entityes.Investimento", b =>
                {
                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
